---
# playbooks/web/install-nginx.yml
- name: Installer et configurer Nginx (Debian/Ubuntu & RHEL/CentOS/Rocky)
  hosts: webservers
  become: yes

  vars:
    http_port: 80
    web_root: "/var/www/html"
    index_file: "index.html"
    index_title: "Serveur Nginx d√©ploy√© par Ansible"
    index_message: "Bienvenue ! üöÄ"
    manage_firewall: true   # ouvre le port si UFW/firewalld sont pr√©sents

  pre_tasks:
    - name: (Debian/Ubuntu) Mettre √† jour le cache APT
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      tags: [nginx, packages]

  tasks:
    ######################################################################
    # Installation du paquet
    ######################################################################
    - name: Installer Nginx (Debian/Ubuntu)
      apt:
        name: nginx
        state: present
      when: ansible_os_family == "Debian"
      tags: [nginx, packages]

    - name: Installer Nginx (RHEL-like)
      package:
        name: nginx
        state: present
      when: ansible_os_family == "RedHat"
      tags: [nginx, packages]

    ######################################################################
    # Contenu web minimal
    ######################################################################
    - name: Cr√©er le r√©pertoire web root
      file:
        path: "{{ web_root }}"
        state: directory
        owner: www-data
        group: www-data
        mode: '0755'
      when: ansible_os_family == "Debian"
      tags: [nginx, webroot]

    - name: Cr√©er le r√©pertoire web root (RHEL-like)
      file:
        path: "{{ web_root }}"
        state: directory
        owner: nginx
        group: nginx
        mode: '0755'
      when: ansible_os_family == "RedHat"
      tags: [nginx, webroot]

    - name: D√©ployer une page d‚Äôaccueil
      copy:
        dest: "{{ web_root }}/{{ index_file }}"
        mode: '0644'
        content: |
          <!doctype html>
          <html lang="fr">
          <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>{{ index_title }}</title>
            <style>
              body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, sans-serif; margin:0; padding:2rem; }
              .wrap { max-width: 820px; margin: 10vh auto; line-height: 1.6; }
              h1 { margin-bottom: .25rem; }
              .muted { opacity: .7; }
              code { background: #f5f5f5; padding: .2rem .4rem; border-radius: .3rem; }
            </style>
          </head>
          <body>
            <div class="wrap">
              <h1>{{ index_title }}</h1>
              <p>{{ index_message }}</p>
              <p class="muted">Fichier servi depuis <code>{{ web_root }}/{{ index_file }}</code></p>
              <p class="muted">G√©r√© par Ansible : <code>playbooks/web/install-nginx.yml</code></p>
            </div>
          </body>
          </html>
      tags: [nginx, webroot]

    ######################################################################
    # Firewall (optionnel)
    ######################################################################
    - name: Ouvrir le port HTTP via UFW (Debian/Ubuntu)
      command: ufw allow {{ http_port }}/tcp
      register: ufw_result
      changed_when: "'Skipping adding' not in ufw_result.stdout"
      failed_when: false
      when: ansible_os_family == "Debian" and manage_firewall
      tags: [firewall]

    - name: Ouvrir le port HTTP via firewalld (RHEL-like)
      firewalld:
        port: "{{ http_port }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      failed_when: false
      when: ansible_os_family == "RedHat" and manage_firewall
      tags: [firewall]

    ######################################################################
    # Service + validation
    ######################################################################

    # Supprimer les vhosts par d√©faut qui peuvent cr√©er un doublon
    - name: (Debian/Ubuntu) D√©sactiver le site par d√©faut
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      when: ansible_os_family == "Debian"
      notify: Reload nginx
      tags: [nginx, config]

    - name: (RHEL-like) Supprimer le default.conf s‚Äôil existe
      ansible.builtin.file:
        path: /etc/nginx/conf.d/default.conf
        state: absent
      when: ansible_os_family == "RedHat"
      notify: Reload nginx
      tags: [nginx, config]

    - name: S'assurer que Nginx √©coute sur le bon port (blockinfile simple)
      blockinfile:
        path: "/etc/nginx/conf.d/00-default-port.conf"
        create: yes
        owner: root
        group: root
        mode: '0644'
        block: |
          # g√©r√© par Ansible
          server {
            listen {{ http_port }} default_server;
            listen [::]:{{ http_port }} default_server;
            server_name _;
            root {{ web_root }};
            index {{ index_file }};
            location / {
              try_files $uri $uri/ =404;
            }
          }
      notify: Reload nginx
      tags: [nginx, config]

    - name: Valider la configuration (nginx -t)
      command: nginx -t
      register: nginx_test
      changed_when: false
      failed_when: nginx_test.rc != 0
      tags: [nginx, validate]

    - name: D√©marrer et activer Nginx
      service:
        name: nginx
        state: started
        enabled: yes
      tags: [nginx, service]

  handlers:
    - name: Reload nginx
      service:
        name: nginx
        state: reloaded

