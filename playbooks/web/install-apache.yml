---
# playbooks/web/install-apache.yml
- name: Installer et configurer Apache (Debian/Ubuntu & RHEL/CentOS/Rocky)
  hosts: webservers
  become: yes

  vars:
    http_port: 80
    server_name: "_"
    web_root: "/var/www/html"
    index_file: "index.html"
    index_title: "Serveur Apache d√©ploy√© par Ansible"
    index_message: "Bienvenue ! üöÄ"
    manage_firewall: true

    # Diff√©rences users/groups/service/binaire selon la famille
    apache_pkg: "{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}"
    apache_svc: "{{ 'apache2' if ansible_os_family == 'Debian' else 'httpd' }}"
    apache_user: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    apache_group: "{{ 'www-data' if ansible_os_family == 'Debian' else 'apache' }}"
    apache_ctl: "{{ 'apache2ctl' if ansible_os_family == 'Debian' else 'apachectl' }}"
    vhost_path: >
      {{ '/etc/apache2/sites-available/000-default.conf' if ansible_os_family == 'Debian'
         else '/etc/httpd/conf.d/000-default.conf' }}

  pre_tasks:
    - name: (Debian/Ubuntu) apt update
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"
      tags: [apache, packages]

  tasks:
    ######################################################################
    # Installation des paquets
    ######################################################################
    - name: Installer Apache
      package:
        name: "{{ apache_pkg }}"
        state: present
      tags: [apache, packages]

    ######################################################################
    # Contenu web minimal
    ######################################################################
    - name: Cr√©er le r√©pertoire web root avec bons droits
      file:
        path: "{{ web_root }}"
        state: directory
        owner: "{{ apache_user }}"
        group: "{{ apache_group }}"
        mode: '0755'
      tags: [apache, webroot]

    - name: D√©ployer une page d‚Äôaccueil
      copy:
        dest: "{{ web_root }}/{{ index_file }}"
        mode: '0644'
        content: |
          <!doctype html>
          <html lang="fr">
          <head>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <title>{{ index_title }}</title>
            <style>
              body { font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, sans-serif; margin:0; padding:2rem; }
              .wrap { max-width: 820px; margin: 10vh auto; line-height: 1.6; }
              h1 { margin-bottom: .25rem; }
              .muted { opacity: .7; }
              code { background: #f5f5f5; padding: .2rem .4rem; border-radius: .3rem; }
            </style>
          </head>
          <body>
            <div class="wrap">
              <h1>{{ index_title }}</h1>
              <p>{{ index_message }}</p>
              <p class="muted">Fichier servi depuis <code>{{ web_root }}/{{ index_file }}</code></p>
              <p class="muted">G√©r√© par Ansible : <code>playbooks/web/install-apache.yml</code></p>
            </div>
          </body>
          </html>
      tags: [apache, webroot]

    ######################################################################
    # VirtualHost / Port
    ######################################################################
    - name: Configurer le VirtualHost par d√©faut (vhost fichier)
      blockinfile:
        path: "{{ vhost_path }}"
        create: yes
        owner: root
        group: root
        mode: '0644'
        block: |
          # G√©r√© par Ansible
          <VirtualHost *:{{ http_port }}>
              ServerName {{ server_name }}
              DocumentRoot {{ web_root }}
              <Directory "{{ web_root }}">
                  Options Indexes FollowSymLinks
                  AllowOverride None
                  Require all granted
              </Directory>
              ErrorLog  {{ (ansible_os_family == 'Debian') | ternary('/var/log/apache2/error.log', '/var/log/httpd/error_log') }}
              CustomLog {{ (ansible_os_family == 'Debian') | ternary('/var/log/apache2/access.log', '/var/log/httpd/access_log') }} combined
          </VirtualHost>
      notify: Reload apache
      tags: [apache, config]

    - name: (Debian/Ubuntu) Assurer √©coute sur le bon port (ports.conf)
      lineinfile:
        path: /etc/apache2/ports.conf
        regexp: '^Listen '
        line: "Listen {{ http_port }}"
        state: present
        create: yes
      when: ansible_os_family == "Debian"
      notify: Reload apache
      tags: [apache, config]

    ######################################################################
    # Firewall (optionnel)
    ######################################################################
    - name: Ouvrir le port HTTP via UFW (Debian/Ubuntu)
      command: ufw allow {{ http_port }}/tcp
      register: ufw_result
      failed_when: false
      changed_when: "'Skipping adding' not in ufw_result.stdout"
      when: ansible_os_family == "Debian" and manage_firewall
      tags: [firewall]

    - name: Ouvrir le port HTTP via firewalld (RHEL-like)
      firewalld:
        port: "{{ http_port }}/tcp"
        permanent: yes
        state: enabled
        immediate: yes
      failed_when: false
      when: ansible_os_family == "RedHat" and manage_firewall
      tags: [firewall]

    ######################################################################
    # Validation + Service
    ######################################################################
    - name: Valider la configuration (apachectl -t)
      command: "{{ apache_ctl }} -t"
      register: apache_test
      changed_when: false
      failed_when: apache_test.rc != 0
      tags: [apache, validate]

    - name: D√©marrer et activer Apache
      service:
        name: "{{ apache_svc }}"
        state: started
        enabled: yes
      tags: [apache, service]

  handlers:
    - name: Reload apache
      service:
        name: "{{ apache_svc }}"
        state: reloaded

